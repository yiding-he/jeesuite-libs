<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">


  <context:property-placeholder
          ignore-unresolvable="true" location="classpath*:*.properties"/>

  <bean id="topicConsumerProvider" class="com.jeesuite.kafka.spring.TopicConsumerSpringProvider">
    <!-- 如果为false启动时将阻塞主线程，如zk连接超时就报错 -->
    <property name="independent" value="false"/>
    <!-- 使用新版API开关,新版未在线上运行过，线上暂用老版API吧 -->
    <property name="useNewAPI" value="true"/>
    <!-- 默认最大处理线程，可以配置大一下空闲会自动回收 -->
    <property name="processThreads" value="100"/>
    <!-- <property name="offsetLogHanlder">
       <bean class="com.jeesuite.test.MysqlOffsetLogHanlder" />
    </property> -->
    <property name="configs">
      <!--参考 http://kafka.apache.org/documentation.html#newconsumerconfigs -->
      <props>
        <!-- 老版 consumerAPI 才需要zookeeper.connect -->
        <prop key="zookeeper.connect">${kafka.zkServers}</prop>
        <prop key="bootstrap.servers">${kafka.servers}</prop>
        <!-- 同一个组对同一个消息只会消费一次，所以不同业务使用不同的group.id -->
        <prop key="group.id">demo</prop>
        <prop key="enable.auto.commit">true</prop>
        <prop key="auto.commit.interval.ms">3000</prop>
        <!-- old api可选值：smallest，largest； 新版api可选值：earliest，latest -->
        <prop key="auto.offset.reset">smallest</prop>
        <!-- 131072 = 128kb -->
        <prop key="max.partition.fetch.bytes">131072</prop>
        <!-- <prop key="value.deserializer">org.apache.kafka.common.serialization.StringDeserializer</prop> -->
      </props>
    </property>
    <property name="topicHandlers">
      <map>
        <!-- 指定消息监听器 -->
        <entry key="demo-topic1">
          <bean class="com.jeesuite.test.DemoMessageHandler"/>
        </entry>
        <entry key="demo-topic2">
          <bean class="com.jeesuite.test.Demo2MessageHandler"/>
        </entry>
      </map>
    </property>
  </bean>


</beans>